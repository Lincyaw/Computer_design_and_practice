#-----------------------------------------------------------
# Vivado v2018.3 (64-bit)
# SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
# IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
# Start of session at: Thu Jun 11 11:55:25 2020
# Process ID: 11008
# Current directory: C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent3464 C:\Users\fay\Documents\GitHub\Computer_design_and_practice\Single_cycle_CPU\code\Single_cycle_CPU\Single_cycle_CPU.xpr
# Log file: C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/vivado.log
# Journal file: C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU\vivado.jou
#-----------------------------------------------------------
start_gui
open_project C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.xpr
update_compile_order -fileset sources_1
generate_target Simulation [get_files C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.srcs/sources_1/ip/ram/ram.xci]
export_ip_user_files -of_objects [get_files C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.srcs/sources_1/ip/ram/ram.xci] -no_script -sync -force -quiet
export_simulation -of_objects [get_files C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.srcs/sources_1/ip/ram/ram.xci] -directory C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.ip_user_files/sim_scripts -ip_user_files_dir C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.ip_user_files -ipstatic_source_dir C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.ip_user_files/ipstatic -lib_map_path [list {modelsim=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/modelsim} {questa=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/questa} {riviera=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/riviera} {activehdl=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
generate_target Simulation [get_files C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.srcs/sources_1/ip/prgrom_1/prgrom.xci]
export_ip_user_files -of_objects [get_files C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.srcs/sources_1/ip/prgrom_1/prgrom.xci] -no_script -sync -force -quiet
export_simulation -of_objects [get_files C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.srcs/sources_1/ip/prgrom_1/prgrom.xci] -directory C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.ip_user_files/sim_scripts -ip_user_files_dir C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.ip_user_files -ipstatic_source_dir C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.ip_user_files/ipstatic -lib_map_path [list {modelsim=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/modelsim} {questa=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/questa} {riviera=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/riviera} {activehdl=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
launch_simulation
source mycpu_tb.tcl
relaunch_sim
run all
set_property -dict [list CONFIG.Coe_File {C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.srcs/sources_1/ip/ram/ram.coe}] [get_ips prgrom]
generate_target all [get_files  C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.srcs/sources_1/ip/prgrom_1/prgrom.xci]
catch { config_ip_cache -export [get_ips -all prgrom] }
export_ip_user_files -of_objects [get_files C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.srcs/sources_1/ip/prgrom_1/prgrom.xci] -no_script -sync -force -quiet
reset_run prgrom_synth_1
launch_runs -jobs 6 prgrom_synth_1
export_simulation -of_objects [get_files C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.srcs/sources_1/ip/prgrom_1/prgrom.xci] -directory C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.ip_user_files/sim_scripts -ip_user_files_dir C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.ip_user_files -ipstatic_source_dir C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.ip_user_files/ipstatic -lib_map_path [list {modelsim=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/modelsim} {questa=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/questa} {riviera=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/riviera} {activehdl=C:/Users/fay/Documents/GitHub/Computer_design_and_practice/Single_cycle_CPU/code/Single_cycle_CPU/Single_cycle_CPU.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
close_sim
launch_simulation
source mycpu_tb.tcl
run all
relaunch_sim
run all
run all
relaunch_sim
run all
relaunch_sim
relaunch_sim
run all
relaunch_sim
run all
relaunch_sim
run all
relaunch_sim
run all
close_sim
